name: 🚀 Deploy Grace Note to Google Play Store

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger from GitHub
    inputs:
      track:
        description: 'Play Store Track'
        required: true
        default: 'internal'
        type: choice
        options:
        - internal
        - alpha
        - beta
        - production

jobs:
  deploy:
    name: 📱 Build & Deploy to Play Store
    runs-on: ubuntu-latest
    
    steps:
    # 📥 Checkout code
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    # ☕ Setup Java
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    # 🐦 Setup Flutter
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        cache: true
        
    # 🔍 Verify Setup
    - name: 🔍 Verify Flutter & Dart Versions
      run: |
        flutter --version
        dart --version
        flutter doctor -v
        
    # 📦 Get dependencies
    - name: 📦 Install Dependencies
      run: flutter pub get
      
    # 🧪 Run tests
    - name: 🧪 Run Tests
      run: flutter test
      
    # 🔍 Analyze code
    - name: 🔍 Analyze Code
      run: flutter analyze
      
    # 🔐 Setup Android Signing
    - name: 🔐 Setup Android Signing
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        SIGNING_KEY_STORE_BASE64: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
      run: |
        # Create keystore directory
        mkdir -p android/app/keystore
        
        # Decode and save keystore
        echo "$SIGNING_KEY_STORE_BASE64" | base64 -d > android/app/keystore/release.keystore
        
        # Create key.properties file
        cat > android/key.properties << EOF
        storePassword=$SIGNING_STORE_PASSWORD
        keyPassword=$SIGNING_KEY_PASSWORD
        keyAlias=$SIGNING_KEY_ALIAS
        storeFile=keystore/release.keystore
        EOF
        
    # 🔢 Auto-increment version
    - name: 🔢 Auto-increment Version
      run: |
        # Get current version from pubspec.yaml
        CURRENT_VERSION=$(grep "version:" pubspec.yaml | cut -d ' ' -f 2)
        
        # Extract version number and build number
        VERSION_NUMBER=$(echo $CURRENT_VERSION | cut -d '+' -f 1)
        BUILD_NUMBER=$(echo $CURRENT_VERSION | cut -d '+' -f 2)
        
        # Increment build number
        NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
        NEW_VERSION="${VERSION_NUMBER}+${NEW_BUILD_NUMBER}"
        
        # Update pubspec.yaml
        sed -i "s/version: .*/version: $NEW_VERSION/" pubspec.yaml
        
        echo "🔢 Version updated to: $NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        
    # 🏗️ Build Android App Bundle
    - name: 🏗️ Build Android App Bundle (AAB)
      run: |
        flutter build appbundle --release \
          --build-name=$(echo $NEW_VERSION | cut -d '+' -f 1) \
          --build-number=$(echo $NEW_VERSION | cut -d '+' -f 2)
          
    # 📊 Generate What's New
    - name: 📊 Generate Release Notes
      run: |
        mkdir -p android/app/src/main/play/release-notes/ko-KR
        cat > android/app/src/main/play/release-notes/ko-KR/default.txt << EOF
        🙏 그레이스노트 업데이트
        
        ✨ 새로운 기능:
        • 큐티노트와 설교노트 작성 개선
        • 커뮤니티 기능 강화
        • 연속 기록 추적 기능
        
        🐛 버그 수정 및 성능 개선
        
        📱 더 나은 사용자 경험을 위한 UI/UX 개선
        EOF
        
    # 🚀 Deploy to Google Play Store
    - name: 🚀 Deploy to Google Play Store
      env:
        PLAY_STORE_SERVICE_ACCOUNT_JSON: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
      run: |
        # Create service account key file
        echo "$PLAY_STORE_SERVICE_ACCOUNT_JSON" > service-account-key.json
        
        # Install fastlane
        sudo gem install fastlane
        
        # Create fastlane directory and configuration
        mkdir -p android/fastlane
        
        # Create Appfile
        cat > android/fastlane/Appfile << EOF
        json_key_file("../service-account-key.json")
        package_name("com.thousandemfla.grace_notes")
        EOF
        
        # Create Fastfile with full automation
        cat > android/fastlane/Fastfile << EOF
        default_platform(:android)

        platform :android do
          desc "Deploy to Google Play Store"
          lane :deploy do
            upload_to_play_store(
              track: '${{ github.event.inputs.track || 'internal' }}',
              aab: '../build/app/outputs/bundle/release/app-release.aab',
              skip_upload_apk: true,
              skip_upload_metadata: false,
              skip_upload_images: true,
              skip_upload_screenshots: true,
              release_status: '${{ github.event.inputs.track == 'production' && 'completed' || 'draft' }}',
              rollout_percentage: '${{ github.event.inputs.track == 'production' && '100' || null }}'
            )
          end
        end
        EOF
        
        # Deploy to Play Store
        cd android
        fastlane deploy
        
    # 🎉 Deployment Success
    - name: 🎉 Deployment Success Notification
      run: |
        echo "🎉 그레이스노트 앱이 Google Play Store에 성공적으로 업로드되었습니다!"
        echo "📱 Version: $NEW_VERSION"
        echo "🏪 Track: ${{ github.event.inputs.track || 'internal' }}"
        echo "📦 Release Status: ${{ github.event.inputs.track == 'production' && 'Live in Production' || 'Draft' }}"
        echo "🔗 Check your Play Console: https://play.google.com/console"
        
        # Show file info
        ls -lh build/app/outputs/bundle/release/app-release.aab
        
    # 📤 Backup Build Artifacts
    - name: 📤 Backup Build Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: grace-notes-release-${{ env.NEW_VERSION }}
        path: |
          build/app/outputs/bundle/release/app-release.aab
          android/app/src/main/play/release-notes/ko-KR/default.txt
        retention-days: 90
        
    # 🧹 Cleanup
    - name: 🧹 Cleanup
      if: always()
      run: |
        rm -f android/app/keystore/release.keystore
        rm -f android/key.properties
        rm -f service-account-key.json